!function(e){var t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={i:r,l:!1,exports:{}};return e[r].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(r,a,function(t){return e[t]}.bind(null,a));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=5)}([function(e,t,n){const r=n(3),a=n(4);e.exports={subwayStations:r,realTime:a}},function(e,t){const n=new Map([["partials","/partials/:fileName"],["subway","/subway/:subwayLine"],["realTime","/subway/:subwayLine/realTime/:subwayStation"],["index","/"]]);e.exports=n},,function(e,t){e.exports=function(e){return`${function(e){return`\n    <div role="tablist">\n      ${e.map((e,t)=>{const n=e.borough;return`\n          <button\n            aria-controls="${n}-panel"\n            aria-selected="${0===t?"true":"false"}"\n            id="${n}-tab"\n            role="tab"\n            data-index="${t}"\n          >${n}</button>\n        `}).join("")}\n    </div>\n  `}(e)}${function(e){return e.reduce((t,n,r)=>{const a=n.borough;return t+`\n      <ul\n        aria-labelledby="${a}-tab"\n        id="${a}-panel"\n        role="tabpanel"\n        ${0===r?"":"hidden"}\n      >\n        ${function(e,t){return e.reduce((e,n)=>e+=`\n    <li>\n      <a href="/subway/${t}/realTime/${n.id}">${n.name}</a>\n    </li>\n    `,"")}(n.stations,e.subwayLine)}\n      </ul>\n    `},"")}(e)}`}},function(e,t){function n(e){return""===e.name?"":`\n    <table>\n        <caption>${e.name}</caption>\n        <tr>\n            <th>Subway line</th>\n            <th>Minutes away</th>\n            <th>Destination</th>\n        </tr>\n        ${e.times.map(e=>`<tr>\n                <td>${e.route}</td>\n                <td>${e.minutes}</td>\n                <td>${e.lastStation}</td>\n            </tr>`).join("")}\n    </table>\n    `}e.exports=function(e){const{direction1:t,direction2:r,lastUpdatedOn:a,stationName:o}=e;return`\n        <h1>${o}</h1>\n        ${function(e){return`<p>Subway time retrieved on ${new Date(+`${e}000`).toLocaleTimeString()}`}(a)}\n        ${n(t)}\n        ${n(r)}\n    `}},function(e,t,n){"use strict";n.r(t);var r=n(1),a=n.n(r),o=function(e,t){var n,r,a,o,s=[],i="",u=e.split("/");for(u[0]||u.shift();a=u.shift();)"*"===(n=a[0])?(s.push("wild"),i+="/(.*)"):":"===n?(r=a.indexOf("?",1),o=a.indexOf(".",1),s.push(a.substring(1,~r?r:~o?o:a.length)),i+=~r&&!~o?"(?:/([^/]+?))?":"/([^/]+?)",~o&&(i+=(~r?"?":"")+"\\"+a.substring(o))):i+="/"+a;return{keys:s,pattern:new RegExp("^"+i+(t?"(?:$|/)":"/?$"),"i")}};const s=new Map;for(const[e,t]of a.a){const n=o(t).pattern,r=({url:e})=>n.exec(e.pathname);s.set(e,r)}var i=s;var u={head:()=>workbox.precaching.getCacheKeyForURL("partials/head.html"),subwayLines:()=>workbox.precaching.getCacheKeyForURL("partials/subwayLines.html"),subwayMap:()=>workbox.precaching.getCacheKeyForURL("partials/subwayMap.html"),foot:()=>workbox.precaching.getCacheKeyForURL("partials/foot.html")};const c="http://traintimelb-367443097.us-east-1.elb.amazonaws.com/getStationsByLine",l="http://traintimelb-367443097.us-east-1.elb.amazonaws.com/getTime";function b(e){return`${c}/${e}`}function p(e,t){return`${l}/${e}/${t}`}function w(e){let t=[];try{t=JSON.parse(e)}catch(e){console.error("Error parsing subway line data"),console.error(response),console.error(e)}return t}var m=n(0);importScripts("https://storage.googleapis.com/workbox-cdn/releases/4.3.1/workbox-sw.js"),workbox.precaching.precacheAndRoute(["partials/head.html","partials/subwayLines.html","partials/subwayMap.html","partials/foot.html","main.js","static/subway_map.pdf"]),workbox.precaching.cleanupOutdatedCaches();const f=new workbox.strategies.CacheFirst({cacheName:workbox.core.cacheNames.precache}),h=new workbox.strategies.NetworkFirst;function d(e){const t=e.pathname.split("/");return{subwayLine:t[2],subwayStation:t[4]}}workbox.routing.registerRoute(i.get("index"),workbox.streams.strategy([()=>f.makeRequest({request:u.head()}),()=>f.makeRequest({request:u.subwayLines()}),()=>f.makeRequest({request:u.subwayMap()}),()=>f.makeRequest({request:u.foot()})])),workbox.routing.registerRoute(i.get("subway"),workbox.streams.strategy([()=>f.makeRequest({request:u.head()}),({url:e})=>{const{subwayLine:t}=d(e);return`<h2>${t}</h2>`},async({event:e,url:t})=>{const{subwayLine:n}=d(t),r=await h.makeRequest({event:e,request:b(n)}),a=w(await r.json());return a.subwayLine=n,`${m.subwayStations(a)}<script src="/main.js"><\/script>`},()=>f.makeRequest({request:u.foot()})])),workbox.routing.registerRoute(i.get("realTime"),workbox.streams.strategy([()=>f.makeRequest({request:u.head()}),({url:e})=>{const{subwayLine:t}=d(e);return`<h2>Real time info for ${t}</h2>`},async({event:e,url:t})=>{const{subwayLine:n,subwayStation:r}=d(t),a=await h.makeRequest({event:e,request:p(n,r)}),o=await a.json();return m.realTime(o)},()=>f.makeRequest({request:u.foot()})])),workbox.core.skipWaiting(),workbox.core.clientsClaim()}]);